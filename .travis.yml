sudo: required
cache:
  - apt

# Build all valid Ubuntu/ROS combinations available on Travis VMs.
language: cpp

matrix:
  include:
  - name: "Xenial kinetic"
    dist: xenial
    env: ROS_DISTRO=kinetic

# Configuration variables. All variables are global now, but this can be used to
# trigger a build matrix for different ROS distributions if desired.
env:
  global:
    - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [precise|trusty|...]
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - ROS_PARALLEL_JOBS='-j8 -l6'
    # Set the python path manually to include /usr/-/python2.7/dist-packages
    # as this is where apt-get installs python packages.
    - PYTHONPATH=$PYTHONPATH:/usr/lib/python3.5/dist-packages:/usr/local/lib/python3.5/dist-packages
    - toolset_branch: master
    - server_type: travis
    - ros_release_name: kinetic
    - ubuntu_version_name: xenial
    - used_modules: check_cache,check_build
    - remote_shell_script: 'https://raw.githubusercontent.com/shadow-robot/sr-build-tools/$toolset_branch/bin/sr-run-ci-build.sh'

# Install system dependencies, namely a very barebones ROS setup.
before_install:
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
  - sudo rm -vf /etc/apt/sources.list.d/*riak*
  - sudo apt-get update -qq
  - sudo apt-get install dpkg
  - sudo apt-get install -y --allow-unauthenticated python-catkin-pkg python-rosdep python-wstool python-catkin-tools ros-$ROS_DISTRO-desktop-full
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Prepare rosdep to install dependencies.
  - sudo rosdep init
  - rosdep update

# Create a catkin workspace with the package under integration.
install:
  - mkdir -p ~/catkin_ws/src
  - cd ~/catkin_ws/src
  - catkin_init_workspace
  - cd ~/catkin_ws
  - catkin build
  - source devel/setup.bash
  - cd ~/catkin_ws/src
  - ln -s $CI_SOURCE_PATH .

# Install all dependencies, using wstool first and rosdep second.
# wstool looks for a ROSINSTALL_FILE defined in the environment variables.
before_script:
  # Install Other dependencies
  - sudo add-apt-repository -y ppa:personalrobotics/ppa
  - sudo rm -vf /etc/apt/sources.list.d/*riak*
  - sudo apt-get update
  - sudo apt-get install -y --allow-unauthenticated cmake build-essential libboost-filesystem-dev libmicrohttpd-dev libompl-dev libtinyxml2-dev libyaml-cpp-dev
  - sudo apt-get install -y --allow-unauthenticated libopenscenegraph-dev
  - sudo apt-get install -y --allow-unauthenticated libnlopt-dev coinor-libipopt-dev libbullet-dev libode-dev
  - sudo apt-get install -y --allow-unauthenticated libassimp-dev libccd-dev libfcl-dev libboost-regex-dev libboost-system-dev doxygen
  - sudo apt-get purge -y ros-kinetic-dartsim
  - sudo apt-get install -y --allow-unauthenticated ros-kinetic-rospy ros-kinetic-pybind11-catkin ros-kinetic-octomap-ros libeigen3-dev python-catkin-tools python-catkin-pkg
  - sudo apt-get install -y --allow-unauthenticated python3-yaml python3-pip
  - sudo apt-get install -y --allow-unauthenticated libboost-all-dev python3-dev libpython3-dev python3-setuptools python-empy
  - sudo pip3 install rospkg catkin_pkg empy
  # Install DART
  - cd ~/
  - git clone git://github.com/dartsim/dart.git
  - cd ~/dart
  - git checkout tags/v6.8.2
  - mkdir build
  - cd build
  - cmake ..
  - make -j4
  - sudo make install
  # source dependencies: install using wstool.
  - cd ~/catkin_ws/src
  - wstool init
  - if [[ -f $ROSINSTALL_FILE ]] ; then wstool merge $ROSINSTALL_FILE ; fi
  - wstool up
  - cd ~/catkin_ws

script:
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - cd ~/catkin_ws
  - ls src/
  - export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:/usr/include/python3.5m/"
  - catkin build
  - source devel/setup.bash